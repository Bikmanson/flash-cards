.b-start-screen {

}

.b-start-screen__window {
    margin-top: 1em;
}

.b-start-screen__btn {

}

.b-btn {
    display: block;
    cursor: pointer;
    color: var(--default-title-color);
    background-image: linear-gradient(#eee, #dcdcdc, #c1c1c1);
    -webkit-transition: all 0.25s;
    -moz-transition: all 0.25s;
    -ms-transition: all 0.25s;
    -o-transition: all 0.25s;
    transition: all 0.25s;
}

.b-btn:hover {
    background-image: linear-gradient(#c1c1c1, #dcdcdc, #eee);
    text-decoration: none;
    color: var(--default-title-color);
}

.b-btn_big {
    font-size: 5em;
    border-radius: 15px;
    padding: 0 25px;
}

.b-ajax-window {
    display: flex;
    justify-content: center;
}

.b-card{
    position: relative;
}

.b-card__side {
    --width: 400px;
    width: var(--width);
    height: 240px;
    position: absolute;
    top: 0;
    left: calc(var(--width) / -2);
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: center;
    color: #868585;
    padding: 25px;
    border-radius: 15px;
    box-shadow: 5px 5px 20px rgba(0, 0, 0, .2);
    background: #262626;
}

.b-card__side__title {
    font-size: 1.5em;
    color: var(--default-title-color);
    width: 80%;
    padding: 5px 0 5px 0;
    position: absolute;
    top: 30px;
    text-align: center;
    border-radius: 5px;
    background: #fbfbfb;
}

.b-card__side_question .b-card__side__title{
    font-weight: 700;
    font-size: 2em;
    padding: 2px 0 2px 0;
    background: #e53935;
    color: white;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.b-card__side_answer .b-card__side__title{
    font-weight: 700;
    font-size: 2em;
    padding: 2px 0 2px 0;
    background: #00796b;
    color: white;
    box-shadow: 0 2px 6px rgba(0, 0, 0, 0.2);
}

.b-card__side__text {
    font-size: 1em;
    color: white;
}

.b-card__side_question {

}

.b-card__side_answer {
    transform: rotateY(180deg);
}

.b-card__side_question, .b-card__side_answer {
    backface-visibility: hidden;
}

.b-card__side_hide {
    animation: card-rotate 1s linear 0s 1 normal forwards;
}

.b-card__side_show {
    animation: card-rotate 1s linear 0s 1 reverse forwards;
}

.b-card__side_next {
    transform: rotateY(0deg);
    animation: bounceOutLeft 1s linear 0s 1 normal both; /*keyframe from animate.css*/
}

@keyframes card-rotate {
    from {
        transform: rotateY(0);
    }
    to {
        transform: rotateY(180deg);
    }
}